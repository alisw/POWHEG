#!/bin/bash

if ! [ -e powheg.input ]
then
    echo "File \`powheg.input\` not found."
    echo "exiting ..."
    exit -1
fi

echo "Enter event file path:"
read filename

if [ ! -e $filename ]
then
    echo "Event file \`$filename\` does not exist."
    echo "exiting ..."
    exit -1
fi


if [ ! -e powhegHerwig.so ]
then
    echo "File \`powhegHerwig.so\`, or a soft link to it, should be in the run directory!"
    echo "exiting ..."
    exit -1
fi

numEv=$(grep -c "</event" $filename)
compressed=false
#eraselink=false

if [ $numEv = 0 ]
then
    numEv=$(zgrep -c "</event" $filename)
    compressed=true
fi

if [ $numEv = 0 ]
then
    echo "There are no events in file!"
    echo "exiting ..."
    exit -1
else
    echo "Found $numEv events in \`$filename.\`"
fi

if($compressed)
then
    case $filename in
	*.gz) eraselink=false ;;
	*) ln -s $filename  $filename.gz
	   filename=$filename.gz
	   eraselink=true ;;
    esac
fi

mult=2
echo "Setting the number of maximum attempts to shower all events to $mult-times the number of events in the event file. The reason for this is that if showering of the event fails we try to shower it again instead of discarding it. If all of your events do not get showered, increase the value of the \`mult\` variable in the script."

numEvHerw=$(($numEv*$mult))

index=$(echo $filename | sed 's/[^0-9]//g')

indexbare=$index
if [ a$index != a ]
then
    index=-$index
else
    indexbare=0
fi

#Flag to switch on/off shower and hadronization(+decay)
#if shower is false, also hadronization is switched off
echo "Enabling shower, hadronization and the underlying event. To disable it, modify the values of the \`shower\`, \`hadr\` and \`ue\` variables correspondingly."
shower=true
hadr=true

#Underliyng event flag
ue=true

#Flag to modify t,b and W masses and width
echo "To set the masses and widths of the particles in Herwig, modify the script. Default values: tmass=172.5, twidth=1.327908, bmass=4.75, wmass=80.419."
wwidth=2.04807
tmass=172.5
twidth=1.327908
bmass=4.75
wmass=80.419
wwidth=2.04807

#Flag to activate QED, QCD shower
echo "Enabling QCD and disabling QED showers. See the \`QCD\` and \`QED\` variables in the script."
QED=false
QCD=true

if !($shower) then
   QED=false
   QCD=false
fi
   
pdfSet=MSTW2008nlo68cl
echo "Using the \`$pdfSet\` pdf set for shower evolution. Modify the \`pdfSet\` variable in order to choose a different set."
   
fout=HerwigRun

echo "# File generated by myLesHouches.sh." > $fout$index.in
if($shower) then
echo "# ==> Shower is switched on">> $fout$index.in
if($hadr) then
echo "# ==> Hadronization is switched on">> $fout$index.in
else
echo "# ==> Hadronization is switched off">> $fout$index.in
fi
else
echo "# ==> Shower and Hadronization are switched off">> $fout$index.in
fi
if($QCD) then
if($QED) then
echo "# Herwig will perform both QCD and QED shower">> $fout$index.in
else
echo "# Herwig will perform QCD shower only">> $fout$index.in
fi
elif($QED) then
echo "# Herwig will perform QED shower only">> $fout$index.in
fi
if($ue) then
echo "# Underlying events will be generated">> $fout$index.in
else
echo "# Underlying events will not be generated">> $fout$index.in
fi


cat <<EOF  >> $fout$index.in
#######################################################
# Load libraries needed to read LesHouces Event Files #
#######################################################
library powhegHerwig.so
library LesHouches.so
 
#############################################################
# Create a LesHouches reader object and open the input file #
#############################################################
cd /Herwig/EventHandlers
#create ThePEG::LesHouchesFileReader myReader
create ThePEG::powhegLesHouchesFileReader myReader
set myReader:WeightWarnings 0
set myReader:FileName $filename
set myReader:CacheFileName cache.tmp
set myReader:MaxScan 3

##############################################################
# Create a cuts object		                             #
##############################################################
cd /Herwig/EventHandlers
create ThePEG::Cuts NoCuts
set myReader:Cuts NoCuts

#################################################
#Set up the LHAPDF and set the PDFs             #
#################################################
# Don't try and find PDF index out from the LH file ...
set myReader:InitPDFs 0
# option to ensure momentum conservation is O.K. due rounding errors (recommended)
set myReader:MomentumTreatment RescaleEnergy
cd /Herwig/Partons
create ThePEG::LHAPDF myPDFset ThePEGLHAPDF.so
# Instead set them explicitly here:
set myPDFset:PDFName $pdfSet
set myPDFset:RemnantHandler HadronRemnants
set /Herwig/Particles/p+:PDF myPDFset
set /Herwig/Partons/PPExtractor:FirstPDF myPDFset
set /Herwig/Partons/PPExtractor:SecondPDF myPDFset
set /Herwig/EventHandlers/myReader:PDFA myPDFset
set /Herwig/EventHandlers/myReader:PDFB myPDFset


#############################################################
# Setup the Les Houches event handler ...                   #
#############################################################
cd /Herwig/EventHandlers

create ThePEG::LesHouchesEventHandler myLesHouchesHandler
insert myLesHouchesHandler:LesHouchesReaders[0] myReader

set myLesHouchesHandler:PartonExtractor /Herwig/Partons/PPExtractor
#set myLesHouchesHandler:WeightOption NegUnitWeight
set myLesHouchesHandler:WeightOption VarNegWeight

#Options: shower + hadr, only shower, no shower and no hard
EOF

if ($shower)
then
    echo "set myLesHouchesHandler:CascadeHandler /Herwig/Shower/ShowerHandler" >> $fout$index.in
    if ($hadr)
    then
	cat <<EOF  >> $fout$index.in
set myLesHouchesHandler:HadronizationHandler /Herwig/Hadronization/ClusterHadHandler
set myLesHouchesHandler:DecayHandler /Herwig/Decays/DecayHandler
EOF
	#insert myLesHouchesHandler:PostSubProcessHandlers 0 /Herwig/QEDRadiation/QEDRadiationHandler
    else
	cat <<EOF  >> $fout$index.in
set myLesHouchesHandler:DecayHandler          NULL      
set myLesHouchesHandler:HadronizationHandler  NULL     
EOF
    fi
else
    #set myLesHouchesHandler:CascadeHandler        NULL       
    cat <<EOF  >> $fout$index.in
set myLesHouchesHandler:DecayHandler          NULL      
set myLesHouchesHandler:HadronizationHandler  NULL     
EOF
fi

cat <<EOF >> $fout$index.in
#########################################################    
# Option to off shower / hadronization / decays / MPI.  #    
#########################################################    
#cd /Herwig/EventHandlers                                         
# The handler for multiple parton interactions          
EOF
if($ue)
then
    #set /Herwig/Shower/ShowerHandler:MPIHandler    NULL
    :
else 
    echo "set /Herwig/Shower/ShowerHandler:MPIHandler    NULL">> $fout$index.in
fi




cat <<EOF     >> $fout$index.in
##################################################
#  Shower parameters
##################################################
# normally, especially for POWHEG, you want
# the scale supplied in the event files (SCALUP)
# to be used as a pT veto scale in the parton shower
set /Herwig/Shower/ShowerHandler:MaxPtIsMuF Yes
set /Herwig/Shower/ShowerHandler:RestrictPhasespace Yes
# Shower parameters
# treatment of wide angle radiation
set /Herwig/Shower/PartnerFinder:PartnerMethod Random
set /Herwig/Shower/PartnerFinder:ScaleChoice Partner


#########################################################  
# Option to off QCD/QED shower                              #   
#########################################################  
#options: QCD QED QCDandQED 
EOF
if($QCD)
then
    if($QED)
    then
	echo "set /Herwig/Shower/ShowerHandler:Interactions QCDandQED"  >> $fout$index.in
    else
	echo "set /Herwig/Shower/ShowerHandler:Interactions QCD " >> $fout$index.in
    fi
elif($QED)
then
    echo "set /Herwig/Shower/ShowerHandler:Interactions QED " >> $fout$index.in
fi   

cat <<EOF >> $fout$index.in
###################################################################
# Technical parameters for this run and setup the event generator #
###################################################################
cd /Herwig/Generators

# theGenerator represents the Les Houches Handler generator
create ThePEG::EventGenerator myGenerator
set myGenerator:RandomNumberGenerator /Herwig/Random
set myGenerator:StandardModelParameters /Herwig/Model
set myGenerator:EventHandler /Herwig/EventHandlers/myLesHouchesHandler
#set myGenerator:EventHandler:Cuts /Herwig/Cuts/QCDCuts

set myGenerator:NumberOfEvents $numEvHerw
set myGenerator:RandomNumberGenerator:Seed 31122001
set myGenerator:DebugLevel 1
set myGenerator:PrintEvent 5
set myGenerator:MaxErrors 200000


######################################################### 
# Set particles properties                              # 
######################################################### 

#Top (and tbar)
set /Herwig/Particles/t:NominalMass $tmass*GeV
set /Herwig/Particles/t:Width $twidth*GeV
set /Herwig/Particles/tbar:NominalMass $tmass
set /Herwig/Particles/tbar:Width $twidth
set /Herwig/Particles/t:Width_generator:Initialize Yes
set /Herwig/Particles/t:Mass_generator:Initialize Yes
set /Herwig/Decays/Top:Initialize Yes

#bottom (and bbar)
set /Herwig/Particles/b:NominalMass $bmass
set /Herwig/Particles/bbar:NominalMass $bmass
set /Herwig/Particles/b:ConstituentMass $bmass
set /Herwig/Particles/bbar:ConstituentMass $bmass

#Wp (and Wm)
set /Herwig/Particles/W-:NominalMass $wmass
set /Herwig/Particles/W-:Width $wwidth
set /Herwig/Particles/W+:NominalMass $wmass
set /Herwig/Particles/W+:Width $wwidth
set /Herwig/Particles/W+:Width_generator:Initialize Yes
set /Herwig/Particles/W+:Mass_generator:Initialize Yes

#########################################################   
# Selectively choose to make certain particles stable   #
######################################################### 
#set /Herwig/Particles/[ParticleName]:Stable Stable
# To read the particle list: 
#	> Herwig build
#	> cd /Herwig/Particles
#	> ls


##################################################
# Analyses 					 #
##################################################
#cd /Herwig/Generators
#insert myGenerator:AnalysisHandlers 0 /Herwig/Analysis/TTbar


##################################################
# HepMC						 #
##################################################
cd /Herwig/Generators
create ThePEG::powhegAnalysis powhegAnalysis powhegHerwig.so
insert myGenerator:AnalysisHandlers 0 powhegAnalysis

set powhegAnalysis:Units GeV_mm
set powhegAnalysis:RunNumber $indexbare


#################################################################
# Save run.							#
#################################################################
cd /Herwig/Generators
saverun $fout$index myGenerator
EOF

Herwig read $fout$index.in

Herwig run $fout$index.run

if [ a$eraselink = atrue ]
then
  \rm $filename
fi

